{"ast":null,"code":"var _class;\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(http) {\n    this.http = http;\n  }\n  getFrase() {\n    const payload = {\n      \"title\": \"maria1\",\n      \"text\": \"111111111\"\n    };\n    const url = \"https://us-central1-atomchallengetodo.cloudfunctions.net/app/addTask\";\n    return this.http.post(url, payload);\n  }\n  updateLibros() {\n    const payload = {\n      \"id\": \"31PS4zMyf3AZfUbrSElw\",\n      \"title\": \"mariaEditado\",\n      \"text\": \"test\"\n    };\n    const url = \"https://us-central1-atomchallengetodo.cloudfunctions.net/app/updateTask/\" + payload.id;\n    return this.http.put(url, payload);\n  }\n  getAllTasks() {\n    const url = environment.API_BASE_URL;\n    return this.http.get(url);\n  }\n}\n_class = TaskService;\n_class.ɵfac = function TaskService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","TaskService","constructor","http","getFrase","payload","url","post","updateLibros","id","put","getAllTasks","API_BASE_URL","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\Desarrollo de software\\Repositorios\\AtomChallenge\\Frontend\\toDoFront\\src\\services\\tasks\\task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { environment } from 'src/environments/environment';\nimport { TaskItem } from 'src/app/tasks/interfaces/task.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(private http: HttpClient) { }\n\n  public getFrase(): Observable<any> {\n    const payload = {\n      \"title\": \"maria1\",\n      \"text\": \"111111111\"\n    }\n    const url = \"https://us-central1-atomchallengetodo.cloudfunctions.net/app/addTask\"\n    return this.http.post<any>(url, payload );\n  }\n\n  updateLibros(): Observable<any>{\n      const payload = {\n       \"id\": \"31PS4zMyf3AZfUbrSElw\",\n       \"title\": \"mariaEditado\",\n       \"text\": \"test\"\n      }\n      const url = \"https://us-central1-atomchallengetodo.cloudfunctions.net/app/updateTask/\"+payload.id\n      return this.http.put<any>(url, payload );\n  }\n\n  public getAllTasks(): Observable<TaskItem[]> {\n    const url = environment.API_BASE_URL;\n    return this.http.get<any>(url);\n  }\n}\n"],"mappings":";AAGA,SAASA,WAAW,QAAQ,8BAA8B;;;AAM1D,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAEjCC,QAAQA,CAAA;IACb,MAAMC,OAAO,GAAG;MACd,OAAO,EAAE,QAAQ;MACjB,MAAM,EAAE;KACT;IACD,MAAMC,GAAG,GAAG,sEAAsE;IAClF,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAMD,GAAG,EAAED,OAAO,CAAE;EAC3C;EAEAG,YAAYA,CAAA;IACR,MAAMH,OAAO,GAAG;MACf,IAAI,EAAE,sBAAsB;MAC5B,OAAO,EAAE,cAAc;MACvB,MAAM,EAAE;KACR;IACD,MAAMC,GAAG,GAAG,0EAA0E,GAACD,OAAO,CAACI,EAAE;IACjG,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAMJ,GAAG,EAAED,OAAO,CAAE;EAC5C;EAEOM,WAAWA,CAAA;IAChB,MAAML,GAAG,GAAGN,WAAW,CAACY,YAAY;IACpC,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAMP,GAAG,CAAC;EAChC;;SA1BWL,WAAW;;mBAAXA,MAAW,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXhB,MAAW;EAAAiB,OAAA,EAAXjB,MAAW,CAAAkB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}