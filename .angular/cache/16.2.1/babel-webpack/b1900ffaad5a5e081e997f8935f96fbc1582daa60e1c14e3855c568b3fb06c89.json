{"ast":null,"code":"var _class;\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/snack-bar\";\nexport class ToastService {\n  constructor(snackBar) {\n    this.snackBar = snackBar;\n  }\n  showToast(iconToast, titleToast) {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 3000,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.addEventListener('mouseenter', Swal.stopTimer);\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\n      }\n    });\n    Toast.fire({\n      icon: iconToast,\n      title: titleToast\n    });\n  }\n  showSuccessInterceptor(message) {\n    this.snackBar.open(message, 'Cerrar', {\n      duration: 3000,\n      panelClass: 'success-toast' // Clase CSS personalizada para el estilo de éxito\n    });\n  }\n\n  showErrorInterceptor(message) {\n    this.snackBar.open(message, 'Cerrar', {\n      duration: 3000,\n      panelClass: 'error-toast' // Clase CSS personalizada para el estilo de error\n    });\n  }\n}\n_class = ToastService;\n_class.ɵfac = function ToastService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.MatSnackBar));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["Swal","ToastService","constructor","snackBar","showToast","iconToast","titleToast","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","fire","icon","title","showSuccessInterceptor","message","open","duration","panelClass","showErrorInterceptor","i0","ɵɵinject","i1","MatSnackBar","factory","ɵfac","providedIn"],"sources":["E:\\Desarrollo de software\\Repositorios\\AtomChallenge\\Frontend\\toDoFront\\src\\services\\toast\\toast.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport Swal, { SweetAlertIcon } from 'sweetalert2'\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(private snackBar: MatSnackBar) { }\n\n  public showToast(iconToast: SweetAlertIcon, titleToast: string){\n    const Toast =Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 3000,\n      timerProgressBar: true,\n      didOpen: (toast) => {\n        toast.addEventListener('mouseenter', Swal.stopTimer)\n        toast.addEventListener('mouseleave', Swal.resumeTimer)\n      }\n    })\n\n    Toast.fire({\n      icon: iconToast,\n      title: titleToast\n    })\n  }\n\n  showSuccessInterceptor(message: string) {\n    this.snackBar.open(message, 'Cerrar', {\n      duration: 3000,\n      panelClass: 'success-toast' // Clase CSS personalizada para el estilo de éxito\n    });\n  }\n\n  showErrorInterceptor(message: string) {\n    this.snackBar.open(message, 'Cerrar', {\n      duration: 3000,\n      panelClass: 'error-toast' // Clase CSS personalizada para el estilo de error\n    });\n  }\n}\n"],"mappings":";AACA,OAAOA,IAAwB,MAAM,aAAa;;;AAMlD,OAAM,MAAOC,YAAY;EAEvBC,YAAoBC,QAAqB;IAArB,KAAAA,QAAQ,GAARA,QAAQ;EAAiB;EAEtCC,SAASA,CAACC,SAAyB,EAAEC,UAAkB;IAC5D,MAAMC,KAAK,GAAEP,IAAI,CAACQ,KAAK,CAAC;MACtBC,KAAK,EAAE,IAAI;MACXC,QAAQ,EAAE,SAAS;MACnBC,iBAAiB,EAAE,KAAK;MACxBC,KAAK,EAAE,IAAI;MACXC,gBAAgB,EAAE,IAAI;MACtBC,OAAO,EAAGL,KAAK,IAAI;QACjBA,KAAK,CAACM,gBAAgB,CAAC,YAAY,EAAEf,IAAI,CAACgB,SAAS,CAAC;QACpDP,KAAK,CAACM,gBAAgB,CAAC,YAAY,EAAEf,IAAI,CAACiB,WAAW,CAAC;MACxD;KACD,CAAC;IAEFV,KAAK,CAACW,IAAI,CAAC;MACTC,IAAI,EAAEd,SAAS;MACfe,KAAK,EAAEd;KACR,CAAC;EACJ;EAEAe,sBAAsBA,CAACC,OAAe;IACpC,IAAI,CAACnB,QAAQ,CAACoB,IAAI,CAACD,OAAO,EAAE,QAAQ,EAAE;MACpCE,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE,eAAe,CAAC;KAC7B,CAAC;EACJ;;EAEAC,oBAAoBA,CAACJ,OAAe;IAClC,IAAI,CAACnB,QAAQ,CAACoB,IAAI,CAACD,OAAO,EAAE,QAAQ,EAAE;MACpCE,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE,aAAa,CAAC;KAC3B,CAAC;EACJ;;SAnCWxB,YAAY;;mBAAZA,MAAY,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;;SAAZ7B,MAAY;EAAA8B,OAAA,EAAZ9B,MAAY,CAAA+B,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}