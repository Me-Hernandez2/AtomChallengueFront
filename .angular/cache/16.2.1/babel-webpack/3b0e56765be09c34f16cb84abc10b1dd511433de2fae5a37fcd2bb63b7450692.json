{"ast":null,"code":"var _class;\nimport { moveItemInArray } from '@angular/cdk/drag-drop';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/services/tasks/task.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/divider\";\nimport * as i7 from \"@angular/material/progress-bar\";\nimport * as i8 from \"@angular/cdk/drag-drop\";\nimport * as i9 from \"@angular/material/checkbox\";\nfunction TaskItemComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"mat-card\", 5)(2, \"mat-card-header\")(3, \"mat-card-title\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"mat-card-content\")(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"mat-divider\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"mat-card-actions\")(10, \"mat-checkbox\", 6);\n    i0.ɵɵtext(11, \"Completada\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 7)(13, \"mat-icon\")(14, \"span\", 8);\n    i0.ɵɵtext(15, \" edit \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(16, \" Editar \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"button\", 7)(18, \"mat-icon\")(19, \"span\", 8);\n    i0.ɵɵtext(20, \" delete_forever \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(21, \" Eliminar \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"mat-card-footer\");\n    i0.ɵɵelement(23, \"mat-progress-bar\", 9);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(task_r1.title);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r1.text);\n  }\n}\nexport class TaskItemComponent {\n  constructor(taskService$) {\n    this.taskService$ = taskService$;\n    this.taskLs = [];\n    this.todo = ['Get to work', 'Pick up groceries aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'Go home', 'Fall asleep'];\n  }\n  ngOnInit() {\n    this.getAllTasks();\n  }\n  drop(event) {\n    moveItemInArray(this.taskLs, event.previousIndex, event.currentIndex);\n  }\n  getAllTasks() {\n    this.taskService$.getAllTasks().subscribe(tasks => {\n      this.taskLs = [...tasks];\n    });\n  }\n}\n_class = TaskItemComponent;\n_class.ɵfac = function TaskItemComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.TaskService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-task-item\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[\"cdkDropListGroup\", \"\"], [1, \"example-container\"], [\"cdkDropList\", \"\", 1, \"example-list\", 3, \"cdkDropListData\", \"cdkDropListDropped\"], [\"class\", \"example-box\", \"cdkDrag\", \"\", 4, \"ngFor\", \"ngForOf\"], [\"cdkDrag\", \"\", 1, \"example-box\"], [1, \"card-item\"], [1, \"example-margin\"], [\"mat-fab\", \"\", \"extended\", \"\", \"color\", \"primary\"], [1, \"material-symbols-outlined\"], [\"mode\", \"indeterminate\"]],\n  template: function TaskItemComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \"To do\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵlistener(\"cdkDropListDropped\", function TaskItemComponent_Template_div_cdkDropListDropped_4_listener($event) {\n        return ctx.drop($event);\n      });\n      i0.ɵɵtemplate(5, TaskItemComponent_div_5_Template, 24, 2, \"div\", 3);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"cdkDropListData\", ctx.todo);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.taskLs);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.MatCard, i3.MatCardActions, i3.MatCardContent, i3.MatCardFooter, i3.MatCardHeader, i3.MatCardTitle, i4.MatFabButton, i5.MatIcon, i6.MatDivider, i7.MatProgressBar, i8.CdkDropList, i8.CdkDropListGroup, i8.CdkDrag, i9.MatCheckbox],\n  styles: [\".example-container[_ngcontent-%COMP%] {\\n    width: 400px;\\n    max-width: 100%;\\n    display: inline-block;\\n    vertical-align: top;\\n}\\n\\n.example-list[_ngcontent-%COMP%] {\\n    border: solid 1px #ccc;\\n    min-height: 60px;\\n    background: white;\\n    border-radius: 4px;\\n    overflow: hidden;\\n    display: block;\\n}\\n\\n.example-box[_ngcontent-%COMP%] {\\n    padding: -38px 10px;\\n    border-bottom: solid 1px #ccc;\\n    color: rgba(0, 0, 0, 0.87);\\n    display: block;\\n    word-break: break-all;\\n    box-sizing: border-box;\\n    cursor: move;\\n    background: white;\\n    font-size: 14px;\\n    margin-bottom: 10px;\\n}\\n\\n\\n.cdk-drag-preview[_ngcontent-%COMP%] {\\n    box-sizing: border-box;\\n    border-radius: 4px;\\n    font-family: 'Poppins', sans-serif;\\n    box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),\\n        0 8px 10px 1px rgba(0, 0, 0, 0.14),\\n        0 3px 14px 2px rgba(0, 0, 0, 0.12);\\n}\\n\\n.cdk-drag-placeholder[_ngcontent-%COMP%] {\\n    opacity: 0;\\n}\\n\\n.cdk-drag-animating[_ngcontent-%COMP%] {\\n    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n\\n.example-box[_ngcontent-%COMP%]:last-child {\\n    border: none;\\n    word-break: break-all;\\n}\\n\\n.example-list.cdk-drop-list-dragging[_ngcontent-%COMP%]   .example-box[_ngcontent-%COMP%]:not(.cdk-drag-placeholder) {\\n    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n\\n  .mdc-form-field>label {\\n    margin-left: 12px !important;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFza3MvdGFzay1pdGVtL3Rhc2staXRlbS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGVBQWU7SUFDZixxQkFBcUI7SUFDckIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksc0JBQXNCO0lBQ3RCLGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLDZCQUE2QjtJQUM3QiwwQkFBMEI7SUFDMUIsY0FBYztJQUNkLHFCQUFxQjtJQUNyQixzQkFBc0I7SUFDdEIsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixlQUFlO0lBQ2YsbUJBQW1CO0FBQ3ZCOzs7QUFHQTtJQUNJLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsa0NBQWtDO0lBQ2xDOzswQ0FFc0M7QUFDMUM7O0FBRUE7SUFDSSxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxzREFBc0Q7QUFDMUQ7O0FBRUE7SUFDSSxZQUFZO0lBQ1oscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0ksc0RBQXNEO0FBQzFEOztBQUVBO0lBQ0ksNEJBQTRCO0FBQ2hDIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY29udGFpbmVyIHtcclxuICAgIHdpZHRoOiA0MDBweDtcclxuICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbn1cclxuXHJcbi5leGFtcGxlLWxpc3Qge1xyXG4gICAgYm9yZGVyOiBzb2xpZCAxcHggI2NjYztcclxuICAgIG1pbi1oZWlnaHQ6IDYwcHg7XHJcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLmV4YW1wbGUtYm94IHtcclxuICAgIHBhZGRpbmc6IC0zOHB4IDEwcHg7XHJcbiAgICBib3JkZXItYm90dG9tOiBzb2xpZCAxcHggI2NjYztcclxuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgY3Vyc29yOiBtb3ZlO1xyXG4gICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcblxyXG5cclxuLmNkay1kcmFnLXByZXZpZXcge1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIGZvbnQtZmFtaWx5OiAnUG9wcGlucycsIHNhbnMtc2VyaWY7XHJcbiAgICBib3gtc2hhZG93OiAwIDVweCA1cHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMiksXHJcbiAgICAgICAgMCA4cHggMTBweCAxcHggcmdiYSgwLCAwLCAwLCAwLjE0KSxcclxuICAgICAgICAwIDNweCAxNHB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xyXG59XHJcblxyXG4uY2RrLWRyYWctcGxhY2Vob2xkZXIge1xyXG4gICAgb3BhY2l0eTogMDtcclxufVxyXG5cclxuLmNkay1kcmFnLWFuaW1hdGluZyB7XHJcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMjUwbXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMiwgMSk7XHJcbn1cclxuXHJcbi5leGFtcGxlLWJveDpsYXN0LWNoaWxkIHtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcclxufVxyXG5cclxuLmV4YW1wbGUtbGlzdC5jZGstZHJvcC1saXN0LWRyYWdnaW5nIC5leGFtcGxlLWJveDpub3QoLmNkay1kcmFnLXBsYWNlaG9sZGVyKSB7XHJcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMjUwbXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMiwgMSk7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAubWRjLWZvcm0tZmllbGQ+bGFiZWwge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEycHggIWltcG9ydGFudDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["moveItemInArray","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","task_r1","title","text","TaskItemComponent","constructor","taskService$","taskLs","todo","ngOnInit","getAllTasks","drop","event","previousIndex","currentIndex","subscribe","tasks","ɵɵdirectiveInject","i1","TaskService","selectors","decls","vars","consts","template","TaskItemComponent_Template","rf","ctx","ɵɵlistener","TaskItemComponent_Template_div_cdkDropListDropped_4_listener","$event","ɵɵtemplate","TaskItemComponent_div_5_Template","ɵɵproperty"],"sources":["E:\\Desarrollo de software\\Repositorios\\AtomChallenge\\Frontend\\toDoFront\\src\\app\\tasks\\task-item\\task-item.component.ts","E:\\Desarrollo de software\\Repositorios\\AtomChallenge\\Frontend\\toDoFront\\src\\app\\tasks\\task-item\\task-item.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {\n  CdkDragDrop,\n  CdkDrag,\n  CdkDropList,\n  CdkDropListGroup,\n  moveItemInArray,\n  transferArrayItem,\n} from '@angular/cdk/drag-drop';\nimport { TaskService } from 'src/services/tasks/task.service';\nimport { TaskItem } from '../interfaces/task.interface';\n\n@Component({\n  selector: 'app-task-item',\n  templateUrl: './task-item.component.html',\n  styleUrls: ['./task-item.component.css']\n})\n\nexport class TaskItemComponent implements OnInit {\n\ntaskLs: TaskItem[] = []\n\n  constructor(private taskService$ : TaskService) {}\n\n  ngOnInit(): void {\n    this.getAllTasks();\n  }\n  todo = ['Get to work', 'Pick up groceries aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'Go home', 'Fall asleep'];\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.taskLs, event.previousIndex, event.currentIndex);\n  }\n\n  getAllTasks(){\n      this.taskService$.getAllTasks().subscribe( (tasks:TaskItem[]) => {\n          this.taskLs = [...tasks];\n      })\n  }\n}\n","<div cdkDropListGroup>\n    <div class=\"example-container\">\n      <h2>To do</h2>\n  \n      <div\n        cdkDropList\n        [cdkDropListData]=\"todo\"\n        class=\"example-list\"\n        (cdkDropListDropped)=\"drop($event)\">\n        <div class=\"example-box\" *ngFor=\"let task of taskLs\" cdkDrag>\n            <mat-card class=\"card-item\">\n                <mat-card-header>\n                  <mat-card-title>{{task.title}}</mat-card-title>\n                </mat-card-header>\n                <mat-card-content>\n                  <p>{{task.text}}</p>\n                  <mat-divider></mat-divider>\n                </mat-card-content>\n                <mat-card-actions>\n                    <mat-checkbox class=\"example-margin\" >Completada</mat-checkbox>\n                    <button mat-fab extended color=\"primary\">\n                        <mat-icon><span class=\"material-symbols-outlined\">\n                            edit\n                            </span></mat-icon>\n                        Editar\n                      </button>\n                      <button mat-fab extended color=\"primary\">\n                        <mat-icon><span class=\"material-symbols-outlined\">\n                            delete_forever\n                            </span></mat-icon>\n                        Eliminar\n                      </button>\n                </mat-card-actions>\n                <mat-card-footer>\n                    \n                  <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n                </mat-card-footer>\n              </mat-card>\n      </div>\n    </div>\n  </div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}