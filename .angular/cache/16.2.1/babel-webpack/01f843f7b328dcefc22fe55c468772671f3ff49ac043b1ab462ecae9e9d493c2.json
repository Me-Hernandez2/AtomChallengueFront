{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/grid-list\";\nimport * as i6 from \"@angular/material/input\";\nexport class TaskFormComponent {\n  constructor(fb) {\n    this.fb = fb;\n  }\n  ngOnInit() {\n    this.initForm();\n  }\n  initForm() {\n    this.taskForm = this.fb.group({\n      titulo: ['', [Validators.required]],\n      descripcion: ['', [Validators.required, Validators.maxLength(100)]]\n    });\n  }\n  testSwal() {\n    Swal.fire({\n      title: 'Error!',\n      text: 'Do you want to continue',\n      icon: 'error',\n      confirmButtonText: 'Cool'\n    });\n  }\n}\n_class = TaskFormComponent;\n_class.ɵfac = function TaskFormComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-task-form\"]],\n  decls: 22,\n  vars: 3,\n  consts: [[\"cols\", \"12\", \"rowHeight\", \"50px\"], [3, \"colspan\"], [\"for\", \"titulo\"], [\"matInput\", \"\", \"type\", \"text\", \"id\", \"titulo\", \"maxlength\", \"50\", \"name\", \"titulo\", \"required\", \"\"], [\"cols\", \"12\", \"rowHeight\", \"50px\", 1, \"mt-5\"], [\"for\", \"descripcion\"], [\"matInput\", \"\", \"id\", \"descripcion\", \"name\", \"descripcion\", \"rows\", \"3\", \"maxlength\", \"70\", \"required\", \"\"], [\"mat-fab\", \"\", \"extended\", \"\", 1, \"atom-button\", 3, \"click\"], [1, \"material-symbols-outlined\"]],\n  template: function TaskFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\")(1, \"mat-grid-list\", 0)(2, \"mat-grid-tile\", 1)(3, \"mat-form-field\")(4, \"label\", 2);\n      i0.ɵɵtext(5, \"T\\u00EDtulo:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(7, \"mat-grid-list\", 4)(8, \"mat-grid-tile\", 1)(9, \"mat-form-field\")(10, \"label\", 5);\n      i0.ɵɵtext(11, \"Descripci\\u00F3n:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"p\");\n      i0.ɵɵtext(14, \"(m\\u00E1ximo 70 caracteres)\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"mat-grid-list\", 4)(16, \"mat-grid-tile\", 1)(17, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function TaskFormComponent_Template_button_click_17_listener() {\n        return ctx.testSwal();\n      });\n      i0.ɵɵelementStart(18, \"mat-icon\")(19, \"span\", 8);\n      i0.ɵɵtext(20, \" save \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtext(21, \" Guardar \");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"colspan\", 12);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"colspan\", 12);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"colspan\", 12);\n    }\n  },\n  dependencies: [i2.MatFabButton, i3.MatFormField, i4.MatIcon, i5.MatGridList, i5.MatGridTile, i6.MatInput],\n  styles: [\".mat-mdc-form-field {\\n    display: block !important;\\n  } \\n\\n    .mat-grid-tile-content {\\n    display: block !important;\\n  }\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFza3MvdGFzay1mb3JtL3Rhc2stZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJFQUFFO0lBQ0UseUJBQXlCO0VBQzNCOztFQUVBO0lBQ0UseUJBQXlCO0VBQzNCIiwic291cmNlc0NvbnRlbnQiOlsiICA6Om5nLWRlZXAgLm1hdC1tZGMtZm9ybS1maWVsZCB7XHJcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xyXG4gIH0gXHJcblxyXG4gIDo6bmctZGVlcCAubWF0LWdyaWQtdGlsZS1jb250ZW50IHtcclxuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["Validators","Swal","TaskFormComponent","constructor","fb","ngOnInit","initForm","taskForm","group","titulo","required","descripcion","maxLength","testSwal","fire","title","text","icon","confirmButtonText","i0","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","TaskFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","TaskFormComponent_Template_button_click_17_listener","ɵɵadvance","ɵɵproperty"],"sources":["E:\\Desarrollo de software\\Repositorios\\AtomChallenge\\Frontend\\toDoFront\\src\\app\\tasks\\task-form\\task-form.component.ts","E:\\Desarrollo de software\\Repositorios\\AtomChallenge\\Frontend\\toDoFront\\src\\app\\tasks\\task-form\\task-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2'\n\n@Component({\n  selector: 'app-task-form',\n  templateUrl: './task-form.component.html',\n  styleUrls: ['./task-form.component.css']\n})\nexport class TaskFormComponent implements OnInit{\n  taskForm!: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  initForm(){\n    this.taskForm = this.fb.group({\n      titulo: ['', [Validators.required]],\n      descripcion: ['', [Validators.required, Validators.maxLength(100)]]\n    });\n  }\n\n  testSwal(){\n    Swal.fire({\n      title: 'Error!',\n      text: 'Do you want to continue',\n      icon: 'error',\n      confirmButtonText: 'Cool'\n    })\n  }\n  \n}\n","<form>\n    <mat-grid-list cols=\"12\" rowHeight=\"50px\">\n        <mat-grid-tile [colspan]=\"12\">\n            <mat-form-field>\n                <label for=\"titulo\" >Título:</label>\n                <input  matInput type=\"text\" id=\"titulo\" maxlength=\"50\" name=\"titulo\" required>\n            </mat-form-field>\n        </mat-grid-tile>\n    </mat-grid-list>\n    <mat-grid-list cols=\"12\" rowHeight=\"50px\" class=\"mt-5\">\n        <mat-grid-tile [colspan]=\"12\">\n            <mat-form-field>\n                <label for=\"descripcion\">Descripción:</label>\n                <input  matInput id=\"descripcion\" name=\"descripcion\" rows=\"3\" maxlength=\"70\" required>\n                \n        </mat-form-field>\n        <p>(máximo 70 caracteres)</p>\n        </mat-grid-tile>\n    </mat-grid-list>\n    <mat-grid-list cols=\"12\" rowHeight=\"50px\" class=\"mt-5\">\n        <mat-grid-tile [colspan]=\"12\">\n            <button (click)=\"testSwal()\" mat-fab extended class=\"atom-button\">\n                <mat-icon>\n                    <span class=\"material-symbols-outlined\">\n                        save\n                    </span>\n                </mat-icon>\n                Guardar\n              </button>\n        </mat-grid-tile>\n    </mat-grid-list>\n</form>"],"mappings":";AACA,SAAiCA,UAAU,QAAQ,gBAAgB;AACnE,OAAOC,IAAI,MAAM,aAAa;;;;;;;;AAO9B,OAAM,MAAOC,iBAAiB;EAG5BC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;EACtB;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAA,QAAQA,CAAA;IACN,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC5BC,MAAM,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,CAAC,CAAC;MACnCC,WAAW,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACY,SAAS,CAAC,GAAG,CAAC,CAAC;KACnE,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACNZ,IAAI,CAACa,IAAI,CAAC;MACRC,KAAK,EAAE,QAAQ;MACfC,IAAI,EAAE,yBAAyB;MAC/BC,IAAI,EAAE,OAAO;MACbC,iBAAiB,EAAE;KACpB,CAAC;EACJ;;SAxBWhB,iBAAiB;;mBAAjBA,MAAiB,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;;QAAjBpB,MAAiB;EAAAqB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT9BV,EAAA,CAAAY,cAAA,WAAM;MAI+BZ,EAAA,CAAAa,MAAA,mBAAO;MAAAb,EAAA,CAAAc,YAAA,EAAQ;MACpCd,EAAA,CAAAe,SAAA,eAA+E;MACnFf,EAAA,CAAAc,YAAA,EAAiB;MAGzBd,EAAA,CAAAY,cAAA,uBAAuD;MAGlBZ,EAAA,CAAAa,MAAA,yBAAY;MAAAb,EAAA,CAAAc,YAAA,EAAQ;MAC7Cd,EAAA,CAAAe,SAAA,gBAAsF;MAE9Ff,EAAA,CAAAc,YAAA,EAAiB;MACjBd,EAAA,CAAAY,cAAA,SAAG;MAAAZ,EAAA,CAAAa,MAAA,mCAAsB;MAAAb,EAAA,CAAAc,YAAA,EAAI;MAGjCd,EAAA,CAAAY,cAAA,wBAAuD;MAEvCZ,EAAA,CAAAgB,UAAA,mBAAAC,oDAAA;QAAA,OAASN,GAAA,CAAAjB,QAAA,EAAU;MAAA,EAAC;MACxBM,EAAA,CAAAY,cAAA,gBAAU;MAEFZ,EAAA,CAAAa,MAAA,cACJ;MAAAb,EAAA,CAAAc,YAAA,EAAO;MAEXd,EAAA,CAAAa,MAAA,iBACF;MAAAb,EAAA,CAAAc,YAAA,EAAS;;;MA1BAd,EAAA,CAAAkB,SAAA,GAAc;MAAdlB,EAAA,CAAAmB,UAAA,eAAc;MAQdnB,EAAA,CAAAkB,SAAA,GAAc;MAAdlB,EAAA,CAAAmB,UAAA,eAAc;MAUdnB,EAAA,CAAAkB,SAAA,GAAc;MAAdlB,EAAA,CAAAmB,UAAA,eAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}