{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/services/tasks/task.service\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"../task-form/task-form.component\";\nimport * as i7 from \"../task-item/task-item.component\";\nexport class TaskListComponent {\n  constructor(router, taskService$) {\n    this.router = router;\n    this.taskService$ = taskService$;\n    this.taskList = [];\n  }\n  ngOnInit() {\n    this.getAllTasks();\n  }\n  navigateToDoList() {\n    this.router.navigate(['home']);\n  }\n  getAllTasks(event) {\n    console.log(event);\n    this.taskService$.getAllTasks().subscribe(tasks => {\n      this.taskList = [...tasks];\n    });\n  }\n}\n_class = TaskListComponent;\n_class.ɵfac = function TaskListComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.TaskService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-task-list\"]],\n  decls: 15,\n  vars: 1,\n  consts: [[1, \"container\", \"animated\", \"fadeIn\"], [1, \"card-to-do\"], [\"mat-card-avatar\", \"\", 1, \"example-button-container\"], [\"mat-fab\", \"\", \"color\", \"accent\", \"aria-label\", \"Example icon button with a bookmark icon\", 3, \"click\"], [1, \"material-symbols-outlined\"], [3, \"updateTaskList\"], [3, \"taskLs\"]],\n  template: function TaskListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\", 1)(2, \"mat-card-header\")(3, \"div\", 2)(4, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_4_listener() {\n        return ctx.navigateToDoList();\n      });\n      i0.ɵɵelementStart(5, \"mat-icon\")(6, \"span\", 4);\n      i0.ɵɵtext(7, \" arrow_back \");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(8, \"mat-card-content\")(9, \"h2\");\n      i0.ɵɵtext(10, \"To Do App\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"app-task-form\", 5);\n      i0.ɵɵlistener(\"updateTaskList\", function TaskListComponent_Template_app_task_form_updateTaskList_11_listener() {\n        return ctx.getAllTasks();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"br\")(13, \"app-task-item\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"mat-card-actions\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"taskLs\", ctx.taskList);\n    }\n  },\n  dependencies: [i3.MatCard, i3.MatCardActions, i3.MatCardAvatar, i3.MatCardContent, i3.MatCardHeader, i4.MatFabButton, i5.MatIcon, i6.TaskFormComponent, i7.TaskItemComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["TaskListComponent","constructor","router","taskService$","taskList","ngOnInit","getAllTasks","navigateToDoList","navigate","event","console","log","subscribe","tasks","i0","ɵɵdirectiveInject","i1","Router","i2","TaskService","selectors","decls","vars","consts","template","TaskListComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","TaskListComponent_Template_button_click_4_listener","ɵɵtext","ɵɵelementEnd","TaskListComponent_Template_app_task_form_updateTaskList_11_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["E:\\Desarrollo de software\\Repositorios\\AtomChallenge\\Frontend\\toDoFront\\src\\app\\tasks\\task-list\\task-list.component.ts","E:\\Desarrollo de software\\Repositorios\\AtomChallenge\\Frontend\\toDoFront\\src\\app\\tasks\\task-list\\task-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AddResponse, TaskItem } from '../interfaces/task.interface';\nimport { TaskService } from 'src/services/tasks/task.service';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css']\n})\n\nexport class TaskListComponent implements OnInit {\n  taskList: TaskItem[] = []\n\n  constructor(private router: Router,\n              private taskService$: TaskService) { }\n\n  ngOnInit(): void {\n    this.getAllTasks();\n  }\n\n  navigateToDoList() {\n    this.router.navigate(['home'])\n  }\n\n  getAllTasks(event?:AddResponse) {\n    console.log(event)\n    this.taskService$.getAllTasks().subscribe((tasks: TaskItem[]) => {\n      this.taskList = [...tasks];\n    })\n  }\n}\n","<div class=\"container animated fadeIn\">\n    <mat-card class=\"card-to-do\">\n        <mat-card-header>\n            <div mat-card-avatar class=\"example-button-container\">\n                <button (click)=\"navigateToDoList()\" mat-fab color=\"accent\"\n                    aria-label=\"Example icon button with a bookmark icon\">\n                    <mat-icon><span class=\"material-symbols-outlined\">\n                            arrow_back\n                        </span></mat-icon>\n                </button>\n            </div>\n        </mat-card-header>\n        <mat-card-content>\n            <h2>To Do App</h2>\n            <app-task-form (updateTaskList)=\"getAllTasks()\"></app-task-form>\n            <br>\n            <app-task-item [taskLs]=\"taskList\"></app-task-item>\n        </mat-card-content>\n        <mat-card-actions>\n        </mat-card-actions>\n    </mat-card>\n</div>"],"mappings":";;;;;;;;;AAWA,OAAM,MAAOA,iBAAiB;EAG5BC,YAAoBC,MAAc,EACdC,YAAyB;IADzB,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,YAAY,GAAZA,YAAY;IAHhC,KAAAC,QAAQ,GAAe,EAAE;EAGwB;EAEjDC,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAC,gBAAgBA,CAAA;IACd,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;EAChC;EAEAF,WAAWA,CAACG,KAAkB;IAC5BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,IAAI,CAACN,YAAY,CAACG,WAAW,EAAE,CAACM,SAAS,CAAEC,KAAiB,IAAI;MAC9D,IAAI,CAACT,QAAQ,GAAG,CAAC,GAAGS,KAAK,CAAC;IAC5B,CAAC,CAAC;EACJ;;SAnBWb,iBAAiB;;mBAAjBA,MAAiB,EAAAc,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;AAAA;;QAAjBnB,MAAiB;EAAAoB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCX9BZ,EAAA,CAAAc,cAAA,aAAuC;MAIfd,EAAA,CAAAe,UAAA,mBAAAC,mDAAA;QAAA,OAASH,GAAA,CAAApB,gBAAA,EAAkB;MAAA,EAAC;MAEhCO,EAAA,CAAAc,cAAA,eAAU;MACFd,EAAA,CAAAiB,MAAA,mBACJ;MAAAjB,EAAA,CAAAkB,YAAA,EAAO;MAIvBlB,EAAA,CAAAc,cAAA,uBAAkB;MACVd,EAAA,CAAAiB,MAAA,iBAAS;MAAAjB,EAAA,CAAAkB,YAAA,EAAK;MAClBlB,EAAA,CAAAc,cAAA,wBAAgD;MAAjCd,EAAA,CAAAe,UAAA,4BAAAI,oEAAA;QAAA,OAAkBN,GAAA,CAAArB,WAAA,EAAa;MAAA,EAAC;MAACQ,EAAA,CAAAkB,YAAA,EAAgB;MAChElB,EAAA,CAAAoB,SAAA,UAAI;MAERpB,EAAA,CAAAkB,YAAA,EAAmB;MACnBlB,EAAA,CAAAoB,SAAA,wBACmB;MACvBpB,EAAA,CAAAkB,YAAA,EAAW;;;MAJYlB,EAAA,CAAAqB,SAAA,IAAmB;MAAnBrB,EAAA,CAAAsB,UAAA,WAAAT,GAAA,CAAAvB,QAAA,CAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}